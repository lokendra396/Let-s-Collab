{"version":3,"sources":["Components/Canvas1.js","App.js","index.js"],"names":["Canvas","_useState","useState","_useState2","Object","slicedToArray","storeImgData","_useState3","_useState4","storeImgData1","_useState5","_useState6","brushColor","setBrushColor","_useState7","_useState8","brushRadius","setBrushRadius","canvasDetails","useRef","color","socketUrl","lineWidth","current","useEffect","socket","io","connect","console","log","on","data","image","Image","context","document","getElementById","getContext","src","addEventListener","drawImage","mouseMoveHandler","e","type","event","touches","findxy","mouseDownHandler","mouseUpHandler","prevX","currX","prevY","currY","flag","canvas","height","window","innerHeight","width","innerWidth","draw","beginPath","moveTo","lineTo","strokeStyle","lineCap","lineJoin","stroke","closePath","waiting","base64EncodedUrl","toDataURL","push","emit","setTimeout","onSave","res","clientX","offsetLeft","clientY","offsetTop","passive","react_default","a","createElement","Fragment","className","defaultValue","onChange","newColor","target","value","min","max","newBrushSize","parseInt","id","onClick","index_esm","size","globalCompositeOperation","clearRect","clear","ai_index_esm","App","Components_Canvas1","ReactDOM","createRoot","render","src_App"],"mappings":"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","file":"static/js/main.ff14fa6d.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./Canvas1.css\";\r\nimport { BsEraserFill } from \"react-icons/bs\";\r\nimport { BsFillPencilFill } from \"react-icons/bs\";\r\nimport { AiOutlineClear } from \"react-icons/ai\";\r\n\r\nconst Canvas = () => {\r\n  const [storeImgData, setStoreImgData] = useState([\"\"]);\r\n  const [storeImgData1, setStoreImgData1] = useState([\"\"]);\r\n  const [brushColor, setBrushColor] = useState(\"white\");\r\n  const [brushRadius, setBrushRadius] = useState(1);\r\n  const { current: canvasDetails } = useRef({\r\n    color: \"white\",\r\n    socketUrl: \"/\",\r\n    lineWidth: 1,\r\n  });\r\n\r\n  const changeColor = (newColor) => {\r\n    setBrushColor(newColor);\r\n    canvasDetails.color = newColor;\r\n  };\r\n  const changeBrushSize = (newBrushSize) => {\r\n    setBrushRadius(newBrushSize);\r\n    canvasDetails.lineWidth = brushRadius;\r\n  };\r\n  const eraser = () => {\r\n    canvasDetails.lineWidth = 10;\r\n    canvasDetails.color = \"black\";\r\n  };\r\n  const pen = () => {\r\n    canvasDetails.lineWidth = brushRadius;\r\n    canvasDetails.color = brushColor;\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const context = canvas.getContext(\"2d\");\r\n    context.globalCompositeOperation = \"source-over\";\r\n  };\r\n  const clear = () => {\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const context = canvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n  };\r\n\r\n  useEffect(() => {\r\n    canvasDetails.socketUrl = \"https://lets-collab-yaqc.onrender.com\";\r\n    canvasDetails.socket = io.connect(canvasDetails.socketUrl, () => {});\r\n\r\n    console.log(canvasDetails);\r\n\r\n    canvasDetails.socket.on(\"image-data\", (data) => {\r\n      const image = new Image();\r\n      const canvas = document.getElementById(\"canvas\");\r\n      const context = canvas.getContext(\"2d\");\r\n      image.src = data;\r\n      image.addEventListener(\"load\", () => {\r\n        context.drawImage(image, 0, 0);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const mouseMoveHandler = (e, type) => {\r\n      console.log(e);\r\n      const event = type === \"touch\" ? e.touches[0] : e;\r\n      findxy(\"move\", event);\r\n    };\r\n    const mouseDownHandler = (e, type) => {\r\n      console.log(e.touches);\r\n      const event = type === \"touch\" ? e.touches[0] : e;\r\n      findxy(\"down\", event);\r\n    };\r\n    const mouseUpHandler = (e, type) => {\r\n      const event = type === \"touch\" ? e.touches[0] : e;\r\n      findxy(\"up\", event);\r\n    };\r\n\r\n    let prevX = 0,\r\n      currX = 0,\r\n      prevY = 0,\r\n      currY = 0,\r\n      flag = false;\r\n\r\n    const canvas = document.getElementById(\"canvas\");\r\n    canvas.height = window.innerHeight;\r\n    canvas.width = window.innerWidth;\r\n    const context = canvas.getContext(\"2d\");\r\n    const onSave = () => {\r\n      console.log(canvasDetails);\r\n      if (!canvasDetails.waiting) {\r\n        const base64EncodedUrl = canvas.toDataURL(\"image/png\");\r\n        // addToImgData(base64EncodedUrl);\r\n        storeImgData.push(base64EncodedUrl);\r\n        storeImgData1.push(base64EncodedUrl);\r\n        canvasDetails.socket.emit(\"image-data\", base64EncodedUrl);\r\n        canvasDetails.waiting = true;\r\n        setTimeout(() => {\r\n          canvasDetails.waiting = false;\r\n        }, 100);\r\n      }\r\n    };\r\n\r\n    const draw = (e) => {\r\n      // START- DRAW\r\n      context.beginPath();\r\n      context.moveTo(prevX, prevY);\r\n      context.lineTo(currX, currY);\r\n      context.strokeStyle = canvasDetails.color;\r\n      context.lineCap = \"round\";\r\n      context.lineJoin = \"round\";\r\n      context.lineWidth = canvasDetails.lineWidth;\r\n      context.stroke();\r\n      context.closePath();\r\n      // END- DRAW\r\n\r\n      onSave();\r\n    };\r\n\r\n    const findxy = (res, e) => {\r\n      if (res === \"down\") {\r\n        prevX = currX;\r\n        prevY = currY;\r\n        currX = e.clientX - canvas.offsetLeft;\r\n        currY = e.clientY - canvas.offsetTop;\r\n        flag = true;\r\n      }\r\n      if (res === \"up\" || res === \"out\") {\r\n        flag = false;\r\n      }\r\n      if (res === \"move\") {\r\n        if (flag) {\r\n          prevX = currX;\r\n          prevY = currY;\r\n          currX = e.clientX - canvas.offsetLeft;\r\n          currY = e.clientY - canvas.offsetTop;\r\n          draw(e);\r\n        }\r\n      }\r\n    };\r\n\r\n    canvas.addEventListener(\"mousemove\", mouseMoveHandler);\r\n    canvas.addEventListener(\"mousedown\", mouseDownHandler);\r\n    canvas.addEventListener(\"mouseup\", mouseUpHandler);\r\n    canvas.addEventListener(\"touchmove\", (e) => mouseMoveHandler(e, \"touch\"), {\r\n      passive: true,\r\n    });\r\n    canvas.addEventListener(\"touchstart\", (e) => mouseDownHandler(e, \"touch\"), {\r\n      passive: true,\r\n    });\r\n    canvas.addEventListener(\"touchend\", (e) => mouseUpHandler(e, \"touch\"));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"blackboard\">\r\n        <figure className=\"frame\">\r\n          <div className=\"color-picker-wrapper\">\r\n            <div>\r\n              <h3>Let's Collab</h3>\r\n            </div>\r\n            <div>\r\n              <input\r\n                className=\"color-picker\"\r\n                type=\"color\"\r\n                defaultValue=\"#EFEFEF\"\r\n                onChange={(e) => changeColor(e.target.value)}\r\n              />\r\n              <input\r\n                min=\"2\"\r\n                max=\"50\"\r\n                type=\"range\"\r\n                value={brushRadius}\r\n                onChange={(event) => {\r\n                  changeBrushSize(parseInt(event.target.value));\r\n                }}\r\n              />\r\n              <span>{brushRadius}</span>\r\n            </div>\r\n          </div>\r\n          <canvas className=\"canvas\" id=\"canvas\"></canvas>\r\n        </figure>\r\n        <div className=\"button-wrapper\">\r\n          <button\r\n            className=\"btn\"\r\n            onClick={(e) => {\r\n              eraser();\r\n            }}\r\n          >\r\n            <BsEraserFill size={14} />\r\n          </button>\r\n          <button\r\n            className=\"btn\"\r\n            onClick={(e) => {\r\n              pen();\r\n            }}\r\n          >\r\n            <BsFillPencilFill size={14} />\r\n          </button>\r\n          <button\r\n            className=\"btn\"\r\n            onClick={(e) => {\r\n              clear();\r\n            }}\r\n          >\r\n            <AiOutlineClear size={14} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Canvas1 from './Components/Canvas1.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Canvas1/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from \"react-dom/client\";\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <>\r\n    <App />\r\n  </>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}